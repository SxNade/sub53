#!/bin/bash

#Author: SxNade :: https://github.com/SxNade :: SxNade@protonmail.com

BGreen='\033[1;32m'
BRed='\033[1;31m'
NC='\033[0m'

echo "	----------------------"
echo -e "		sub53 ${BRed}v1.1b${NC}       "
echo -e "		${BRed}(For Linux)${NC}"
echo "	----------------------"

echo -e "		${BGreen}SxNade${NC}\n"

sleep 0.5

if [ $# -lt 1 ]
then
	echo
	echo -e "	${BRed} usage${NC}:${BGreen}==>${NC} "
	echo -e "		${BRed}./sub53${NC} ${BGreen}domain1${NC} ${BRed}......${NC} ${BGreen}domainN${NC}"
	echo
	echo -e "		${BRed}  0 0${NC}"
	echo -e "		${BGreen}   |${NC}"
	echo -e "               ${BGreen}   ---${NC}\n"
	exit
fi


find_subs() {
	curl https://crt.sh/?q=${1} | grep -o .*.${1} | awk -F "<TD>" '{print $2}' | awk -F "<BR>" '{print $1}' | sort -u > ${1}.txt
}


for domain in ${@}
do
	find_subs ${domain} &
done
wait

if [ ${?} -eq 0 ]
then
	clear
	echo -e "\n${BGreen}[+]${NC} subdomain Extraction Successfull..."
	for domain in ${@}
	do
		echo -e "\n[+] Results For ${BRed}${domain}${NC} ::: ${domain}.txt"
		echo -e "===================================================================================\n"

		for dmn in $(cat ${domain}.txt)
		do
			echo -e "${BGreen}-->${NC} ${dmn}"
		done
	done
fi

echo -e "=========================================================================================="

for domain in ${@}
do
	COUNT=`expr $(wc -l ${domain}.txt | cut -d " " -f1) - 1`
	echo -e "\n${BRed}[*] Number of subdomains${NC} for ${BGreen}${domain}${NC} ==> \e[1m$COUNT"
done

sleep 1

echo -e "\n${BGreen}[+]${NC} Filtering ${BRed}Alive${NC} subdomains now..\n"
echo -e "[*] Hit ${BRed}CTRL+C${NC} to stop or ${BGreen}wait${NC} 8 seconds to continue....."
sleep 15	#Yes Because you will take 7 seconds to read the alert above!


function filter() {
	for domain in $(cat $1)
	do
		host ${domain}
		if [ $? -eq 0 ]
		then
			echo ${domain} >> filtered.$1
		fi
	done
	sleep 2

}




for sub in $(ls *.txt)
do
	echo -e "[*] Filtering ${BRed}${sub}${NC} now...."
	filter ${sub}&
done
wait

echo -e "${BGreen}[+]${NC} Filtering ${BGreen}successfully${NC} completed...."
echo -e "\n${BGreen}[+]${NC} Filtered results have Been written to ${BRed}filtered${NC}.${BGreen}domain${NC}.txt files\n"

sleep 1

if [ -d Discovered ]
then
	echo -e "${BGreen}[+]${NC} moving  all Discovered data to ${BRed}Discovered${NC} directory.."
	for file in $(ls *.txt)
	do
		mv ${file} Discovered/
	done
	echo -e "${BGreen}[+]${NC} Execution completed...\n"
else
	echo -e "${BGreen}[+]${NC} making a Directory named ${BRed}Discovered${NC}..\n"
	mkdir Discovered
	echo -e "${BGreen}[+]${NC} moving  all Discovered data to ${BRed}Discovered${NC} directory.."
	for file in $(ls *.txt)
	do
		mv ${file} Discovered/
	done
	echo -e "${BGreen}[+]${NC} Execution completed...\n"
fi




for sub in $(ls *.txt)
do
	echo -e "[*] Filtering ${BRed}${sub}${NC} now...."
	filter ${sub}&
done
wait

echo -e "${BGreen}[+]${NC} Filtering ${BGreen}successfully${NC} completed...."
echo -e "\n${BGreen}[+]${NC} Filtered results have Been written to ${BRed}filtered${NC}.${BGreen}domain${NC}.txt files\n"

sleep 1

if [ -d Discovered ]
then
	echo -e "${BGreen}[+]${NC} moving  all Discovered data to ${BRed}Discovered${NC} directory.."
	for file in $(ls *.txt)
	do
		mv ${file} Discovered/
	done
	echo -e "${BGreen}[+]${NC} Execution completed...\n"
else
	echo -e "${BGreen}[+]${NC} making a Directory named ${BRed}Discovered${NC}..\n"
	mkdir Discovered
	echo -e "${BGreen}[+]${NC} moving  all Discovered data to ${BRed}Discovered${NC} directory.."
	for file in $(ls *.txt)
	do
		mv ${file} Discovered/
	done
	echo -e "${BGreen}[+]${NC} Execution completed...\n"
fi

